digraph "PoTv2Debug/PoTv2Debug.ino"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="PoTv2Debug/PoTv2Debug.ino",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="Arduino.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="Wire.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="Encoder.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="NewPing.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="BoardLayout.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_board_layout_8hpp.html",tooltip="Capture board pinout and physical constants for project."];
  Node1 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="QTouchBoard.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_q_touch_board_8hpp.html",tooltip="Header for class to control pair of capacitive touch board for fretBoard and strumBoard."];
  Node7 -> Node3 [color="steelblue1",style="solid"];
  Node1 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="SensorState.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_sensor_state_8hpp.html",tooltip="Header for class to hold and update sensor values and display them over serial."];
  Node8 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="stdint.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node8 -> Node6 [color="steelblue1",style="solid"];
  Node1 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="Ultrasonic.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ultrasonic_8hpp.html",tooltip="Header containing Ultrasonic Rangefinder config and macros."];
  Node1 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="MMA8452Q.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_m_m_a8452_q_8hpp.html",tooltip="6DOF IMU class used to get isLefty, originally written by SparkFun"];
  Node11 -> Node2 [color="steelblue1",style="solid"];
}
